{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Programming /Microverse Course/Mircroverse_Course/math-magicians/src/components/Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button({\n  label,\n  isOperator,\n  gridColumnSpan,\n  onClick\n}) {\n  const buttonClassName = isOperator ? 'button operator' : 'button';\n  const buttonStyle = gridColumnSpan ? {\n    gridColumn: `span ${gridColumnSpan}`\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: buttonClassName,\n    style: buttonStyle,\n    type: \"button\",\n    onClick: () => onClick(label),\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  isOperator: PropTypes.bool,\n  gridColumnSpan: PropTypes.number,\n  onClick: PropTypes.func.isRequired\n};\nButton.defaultProps = {\n  isOperator: false,\n  gridColumnSpan: 1\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Button","label","isOperator","gridColumnSpan","onClick","buttonClassName","buttonStyle","gridColumn","className","style","type","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","bool","number","func","defaultProps","$RefreshReg$"],"sources":["/Volumes/Data/Programming /Microverse Course/Mircroverse_Course/math-magicians/src/components/Button.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({\n  label, isOperator, gridColumnSpan, onClick,\n}) {\n  const buttonClassName = isOperator ? 'button operator' : 'button';\n  const buttonStyle = gridColumnSpan ? { gridColumn: `span ${gridColumnSpan}` } : {};\n\n  return (\n    <button className={buttonClassName} style={buttonStyle} type=\"button\" onClick={() => onClick(label)}>\n      {label}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  isOperator: PropTypes.bool,\n  gridColumnSpan: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\nButton.defaultProps = {\n  isOperator: false,\n  gridColumnSpan: 1,\n};\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAC;EACdC,KAAK;EAAEC,UAAU;EAAEC,cAAc;EAAEC;AACrC,CAAC,EAAE;EACD,MAAMC,eAAe,GAAGH,UAAU,GAAG,iBAAiB,GAAG,QAAQ;EACjE,MAAMI,WAAW,GAAGH,cAAc,GAAG;IAAEI,UAAU,EAAG,QAAOJ,cAAe;EAAE,CAAC,GAAG,CAAC,CAAC;EAElF,oBACEJ,OAAA;IAAQS,SAAS,EAAEH,eAAgB;IAACI,KAAK,EAAEH,WAAY;IAACI,IAAI,EAAC,QAAQ;IAACN,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACH,KAAK,CAAE;IAAAU,QAAA,EACjGV;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACC,EAAA,GAXQhB,MAAM;AAafA,MAAM,CAACiB,SAAS,GAAG;EACjBhB,KAAK,EAAEJ,SAAS,CAACqB,MAAM,CAACC,UAAU;EAClCjB,UAAU,EAAEL,SAAS,CAACuB,IAAI;EAC1BjB,cAAc,EAAEN,SAAS,CAACwB,MAAM;EAChCjB,OAAO,EAAEP,SAAS,CAACyB,IAAI,CAACH;AAC1B,CAAC;AAEDnB,MAAM,CAACuB,YAAY,GAAG;EACpBrB,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAE;AAClB,CAAC;AAED,eAAeH,MAAM;AAAC,IAAAgB,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}