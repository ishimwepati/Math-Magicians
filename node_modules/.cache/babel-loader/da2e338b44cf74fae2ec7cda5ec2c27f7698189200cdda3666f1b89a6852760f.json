{"ast":null,"code":"import Big from 'big.js';\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    try {\n      return one.mod(two).toString();\n    } catch (err) {\n      return \"Can't find modulo as can't divide by 0.\";\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}","map":{"version":3,"names":["Big","operate","numberOne","numberTwo","operation","one","two","plus","toString","minus","times","div","err","mod","Error"],"sources":["/Volumes/Data/Programming /Microverse Course/Mircroverse_Course/math-magicians/src/logic/operate.js"],"sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    try {\n      return one.mod(two).toString();\n    } catch (err) {\n      return \"Can't find modulo as can't divide by 0.\";\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,QAAQ;AAExB,eAAe,SAASC,OAAOA,CAACC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAE;EAC/D,MAAMC,GAAG,GAAGL,GAAG,CAACE,SAAS,CAAC;EAC1B,MAAMI,GAAG,GAAGN,GAAG,CAACG,SAAS,CAAC;EAC1B,IAAIC,SAAS,KAAK,GAAG,EAAE;IACrB,OAAOC,GAAG,CAACE,IAAI,CAACD,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;EACjC;EACA,IAAIJ,SAAS,KAAK,GAAG,EAAE;IACrB,OAAOC,GAAG,CAACI,KAAK,CAACH,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;EAClC;EACA,IAAIJ,SAAS,KAAK,GAAG,EAAE;IACrB,OAAOC,GAAG,CAACK,KAAK,CAACJ,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;EAClC;EACA,IAAIJ,SAAS,KAAK,GAAG,EAAE;IACrB,IAAI;MACF,OAAOC,GAAG,CAACM,GAAG,CAACL,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,OAAO,oBAAoB;IAC7B;EACF;EACA,IAAIR,SAAS,KAAK,GAAG,EAAE;IACrB,IAAI;MACF,OAAOC,GAAG,CAACQ,GAAG,CAACP,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,OAAO,yCAAyC;IAClD;EACF;EACA,MAAME,KAAK,CAAE,sBAAqBV,SAAU,GAAE,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}